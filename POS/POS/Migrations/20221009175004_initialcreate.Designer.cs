// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using POS.Models;

#nullable disable

namespace POS.Migrations
{
    [DbContext(typeof(db_POS))]
    [Migration("20221009175004_initialcreate")]
    partial class initialcreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("POS.Models.tbl_category", b =>
                {
                    b.Property<long>("category_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("category_id"), 1L, 1);

                    b.Property<DateTime?>("category_created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("category_name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("fk_store_id")
                        .HasColumnType("bigint");

                    b.HasKey("category_id");

                    b.HasIndex("fk_store_id");

                    b.ToTable("tbl_category");
                });

            modelBuilder.Entity("POS.Models.tbl_product", b =>
                {
                    b.Property<long>("product_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("product_id"), 1L, 1);

                    b.Property<long?>("fk_category_id")
                        .HasColumnType("bigint");

                    b.Property<long?>("fk_store_id")
                        .HasColumnType("bigint");

                    b.Property<int?>("product_available_quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("product_created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("product_name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("product_price")
                        .HasColumnType("int");

                    b.HasKey("product_id");

                    b.HasIndex("fk_category_id");

                    b.HasIndex("fk_store_id");

                    b.ToTable("tbl_product");
                });

            modelBuilder.Entity("POS.Models.tbl_record", b =>
                {
                    b.Property<long>("record_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("record_id"), 1L, 1);

                    b.Property<long?>("fk_store_id")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("record_created_at")
                        .HasColumnType("datetime2");

                    b.Property<int?>("total_amount_per_slip")
                        .HasColumnType("int");

                    b.HasKey("record_id");

                    b.HasIndex("fk_store_id");

                    b.ToTable("tbl_record");
                });

            modelBuilder.Entity("POS.Models.tbl_role", b =>
                {
                    b.Property<long>("role_id")
                        .HasColumnType("bigint");

                    b.Property<string>("role_name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("role_id");

                    b.ToTable("tbl_role");
                });

            modelBuilder.Entity("POS.Models.tbl_store", b =>
                {
                    b.Property<long>("store_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("store_id"), 1L, 1);

                    b.Property<DateTime?>("store_created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("store_description")
                        .HasColumnType("text");

                    b.Property<string>("store_logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("store_name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("store_id");

                    b.HasIndex("store_name")
                        .IsUnique()
                        .HasFilter("[store_name] IS NOT NULL");

                    b.ToTable("tbl_store");
                });

            modelBuilder.Entity("POS.Models.tbl_user", b =>
                {
                    b.Property<long?>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("user_id"), 1L, 1);

                    b.Property<long?>("fk_role_id")
                        .HasColumnType("bigint");

                    b.Property<long?>("fk_store_id")
                        .HasColumnType("bigint");

                    b.Property<bool?>("user_approved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("user_created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("user_email_phone")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("user_email_status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("user_password")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("user_verification_code")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user_id");

                    b.HasIndex("fk_role_id");

                    b.HasIndex("fk_store_id");

                    b.HasIndex("user_email_phone")
                        .IsUnique()
                        .HasFilter("[user_email_phone] IS NOT NULL");

                    b.ToTable("tbl_user");
                });

            modelBuilder.Entity("POS.Models.tbl_category", b =>
                {
                    b.HasOne("POS.Models.tbl_store", "tbl_store")
                        .WithMany("tbl_category")
                        .HasForeignKey("fk_store_id");

                    b.Navigation("tbl_store");
                });

            modelBuilder.Entity("POS.Models.tbl_product", b =>
                {
                    b.HasOne("POS.Models.tbl_category", "tbl_category")
                        .WithMany("tbl_product")
                        .HasForeignKey("fk_category_id");

                    b.HasOne("POS.Models.tbl_store", "tbl_store")
                        .WithMany("tbl_product")
                        .HasForeignKey("fk_store_id");

                    b.Navigation("tbl_category");

                    b.Navigation("tbl_store");
                });

            modelBuilder.Entity("POS.Models.tbl_record", b =>
                {
                    b.HasOne("POS.Models.tbl_store", "tbl_store")
                        .WithMany("tbl_record")
                        .HasForeignKey("fk_store_id");

                    b.Navigation("tbl_store");
                });

            modelBuilder.Entity("POS.Models.tbl_user", b =>
                {
                    b.HasOne("POS.Models.tbl_role", "tbl_role")
                        .WithMany("tbl_user")
                        .HasForeignKey("fk_role_id");

                    b.HasOne("POS.Models.tbl_store", "tbl_store")
                        .WithMany("tbl_user")
                        .HasForeignKey("fk_store_id");

                    b.Navigation("tbl_role");

                    b.Navigation("tbl_store");
                });

            modelBuilder.Entity("POS.Models.tbl_category", b =>
                {
                    b.Navigation("tbl_product");
                });

            modelBuilder.Entity("POS.Models.tbl_role", b =>
                {
                    b.Navigation("tbl_user");
                });

            modelBuilder.Entity("POS.Models.tbl_store", b =>
                {
                    b.Navigation("tbl_category");

                    b.Navigation("tbl_product");

                    b.Navigation("tbl_record");

                    b.Navigation("tbl_user");
                });
#pragma warning restore 612, 618
        }
    }
}
